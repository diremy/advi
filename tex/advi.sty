%%
%% This is the original source file advi.sty
%%
%% Package `advi' to use with LaTeX 2e
%% Copyright Roberto Di Cosmo, Jun Furuse, Didier Remy, and Pierre Weis
%% All rights reserved.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{advi}
         [2001/29/08 v0.40 Advi Package for advi Previewer]

%%

%% Identification
%% Preliminary declarations

\RequirePackage {keyval}

%% Options

\newif \ifadvi@annot \advi@annotfalse
\newif \ifadvi@ignore \advi@ignorefalse
\DeclareOption {ignore}{\advi@ignoretrue}

\ProcessOptions

\ifadvi@annot \RequirePackage {pst-node}\fi

%% More declarations

% Auxilliary macros

\def \advi@empty{}
\def \advi@error #1{\PackageError {Advi}{#1}{Type <RETURN> to proceed.}}
\ifadvi@ignore 
\def \advi@special@ #1{\hbox{}}
\else
\let \advi@special@ \special
\fi
\def \advi@special #1{\advi@special@ {advi: #1}}
\def \advi@export #1#2{\@ifdefinable #1{\let #1#2}}
\def \advi@exportenv #1#2{%
  \@ifundefined {#1}{\expandafter \let \csname #1\expandafter \endcsname
                     \csname end#1\endcsname }\relax  
  \expandafter \@ifdefinable \csname #1\endcsname
  {\expandafter \let \csname #1\expandafter \endcsname \csname #2\endcsname
   \expandafter \let \csname end#1\expandafter \endcsname 
        \csname end#2\endcsname}}

%%% record and play

\def \advi@start {start}
\def \advi@startplay {start play}
\define@key{advi@record}{play}[]{\let \advi@do \advi@startplay}
\newenvironment {Advi@record}[2][]
  {\let \advi@do \advi@start 
   \setkeys{advi@record}{#1}\advi@special {proc=#2 record=\advi@do}}
  {\advi@special {proc record=end}}
\newcommand {\advi@play}[2][]%
   {\begingroup
      \def \@test {#1}\ifx \@test \advi@empty\else \color {#1}\fi
      \advi@special {proc=#2 play}%
    \endgroup}

\advi@exportenv {Advirecord}{Advi@record} 
\newcommand {\advirecord}[3][]{\begin{Advi@record}[#1]{#2}#3\end{Advi@record}}
\advi@export \adviplay \advi@play


%%% Embedded applications

\def \advi@embed@name{anonymous}
\def \advi@embed@mode{ephemeral}
\define@key {advi@embed}{name}{\def \advi@embed@name {#1}}
\def \advi@definemode #1{%
  \define@key {advi@embed}{#1}[anonymous]{%
     \def \advi@embed@mode {#1}\def\advi@embed@name {##1}%
  }}
\advi@definemode{ephemeral}
\advi@definemode{persistent}
\advi@definemode{sticky}

\def \advi@embed@ #1#2#3#4#5{%
  \mbox{\advi@special
          {embed name="#1" mode=#2 width=#3 height=#4 command="#5"}%
          {\vbox to #4{\hbox to #3{}}}}%
}
\newcommand{\advi@embed}[4][]{
  \mbox {\setkeys {advi@embed}{#1}%
         \advi@embed@ {\advi@embed@name}{\advi@embed@mode}{#2}{#3}{#4}}%
}
\newcommand{\advi@killembed}[1]{\advi@special {kill name="#1"}}
\advi@export \adviembed \advi@embed
\advi@export \advikillembed \advi@killembed 


%%% Background colors and images

\define@key {advi@bg}{color}{\advi@special{setbg color=#1}}
\define@key {advi@bg}{image}{\advi@special{setbg image=#1}}
\define@key {advi@bg}{alpha}{\advi@special{setbg alpha=#1}}
\define@key {advi@bg}{blend}{\advi@special{setbg blend=#1}}
\define@key {advi@bg}{reset}[]{\advi@special{setbg reset}}
\define@key {advi@bg}{inherit}[]{\advi@special{setbg inherit}}
\newcommand{\advibg}{\setkeys{advi@bg}}

%%% Pausing and waiting

\def\advi@pause {\advi@special{pause}}
\def\advi@wait#1{\advi@special{wait sec=#1}}

%% export
\newcommand {\adviwait}[1][]%
   {\def \@test {#1}\ifx \@test \advi@empty \advi@pause 
    \else \advi@wait {#1}\fi}

%%% Transparency and alpha blending
%%% To be revised. 

\def\advi@epstransparent
   {\advi@special{epstransparent push true}%
    \aftergroup \advi@resetepstransparent} 
\def\advi@epswhite
   {\advi@special{epstransparent push false}%
    \aftergroup \advi@resetepstransparent} 
\def\advi@setalpha#1%
   {\advi@special{alpha push #1}%
    \aftergroup \advi@resetalpha} 
\def\advi@setblend#1%
   {\advi@special{blend push #1}%
    \aftergroup\advi@resetblend}
\def\advi@resetepstransparent {\advi@special{epstransparent pop}}
\def\advi@resetalpha {\advi@special{alpha pop}}
\def\advi@resetblend {\advi@special{blend pop}}

\advi@export \epstransparent \advi@epstransparent
\advi@export \epswhite \advi@epswhite
\advi@export \setalpha \advi@setalpha
\advi@export \setblend \advi@setblend


%%% Animated transitions

\def \advi@transfrom{}
\def \advi@transsteps{}
\define@key {advi@trans}{none}[]{\def \advi@transmode {none}}
\define@key {advi@trans}{slide}[]{\def \advi@transmode {slide}}
\define@key {advi@trans}{block}[]{\def \advi@transmode {block}}
\define@key {advi@trans}{wipe}[]{\def \advi@transmode {wipe}}
\define@key {advi@trans}{from}{\def \advi@transfrom { from=#1}}
\define@key {advi@trans}{steps}{\def \advi@transsteps { steps=#1}}
\def\advi@transition #1{%
  \begingroup \setkeys {advi@trans}{#1}%
      \advi@special{trans \advi@transmode \advi@transfrom
                    \advi@transsteps}%
  \endgroup}
% not used anymore
% \def\advi@resettransition{\advi@special{trans pop}}

\def\advi@transbox@save#1#2#3{\advi@special
  {transbox save width=#1 height=#2 depth=#3}}
\def\advi@transbox@go#1{\advi@special{transbox go #1}}

\def \advi@transslide {slide}
\def \advi@transbox #1{%
   \def \advi@afterbox 
      {\hbox {\advi@transbox@save{\the\wd0 }{\the\ht0 }{\the\dp0}%
              \unhbox0\setkeys {advi@trans}{#1}%
              \advi@transbox@go
                  {slide\advi@transfrom \advi@transsteps}}}%
   \def \advi@@afterbox {\aftergroup \advi@afterbox} 
   \afterassignment \advi@@afterbox \setbox0 \hbox } 

\advi@export \advitransition \advi@transition
\advi@export \advitransbox \advi@transbox

%%% For PS Tricks

\def \advi@moveto {\advi@special {moveto}}
\def\advi@psput@special#1{%
\hbox{%
\pst@Verb{{ \pst@coor }  
dup exec 2 copy moveto advi@Dict begin printpos end
\tx@PutCoor 
\tx@PutBegin}
\hbox {\advi@moveto \box#1}%
\pst@Verb{\tx@PutEnd}}}

\def\advi@ncput@iii{%
\leavevmode
\hbox{%
\pst@Verb{%
\pst@nodedict
/t \psk@npos def
tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse 
LPutCoor 
end
\tx@PutBegin
}%
\hbox {\box\pst@hbox}%
\pst@Verb{\tx@PutEnd}}}

\@ifundefined {psput@special}{}
{\let \psput@special \advi@psput@special
 %\@ifundefined {ncput@iii}{}{\let \ncput@iii \advi@ncput@iii}%
 \advi@special@ {header=advi.pro}}

%%% Active DVI

\newenvironment {Advi@anchor}[1]
  {\advi@special@ {html:<a advi="#1">}}
  {\advi@special@ {html:</a>}}
\newcommand {\advi@anchor}[2]{\begin{Advi@anchor}{#1}#2\end{Advi@anchor}}
\advi@exportenv {Advianchor}{Advi@anchor}
\advi@export \advianchor \advi@anchor

%%% Partial patch for overlays -- 0 will be shown > 0 will not be shown

\newif \ifadvi@hidden \advi@hiddenfalse
\def \advi@overlay 
  {\ifadvi@hidden \else
     \advi@hide \aftergroup \advi@endhide \advi@hiddentrue 
   \fi}

\def \advi@hide {\Advi@record{@hide}}
\def \advi@endhide   {\endAdvi@record}
\def \make@advioverlay 
  {\let \advi@old@overlay \overlay
   \renewcommand {\overlay}{\advi@overlay \advi@ignore}}
\def \advi@ignore #1{}
\@ifundefined {overlay}{}
  {\ifadvi@ignore
     \def \advi@hide {\bgroup \overlay 9}
     \def \advi@endhide {\egroup}
   \else
     \AtBeginDocument {\make@advioverlay}
   \fi}


\endinput
