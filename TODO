BEFORE RELEASE:
===============

 * compléter manual.tex (la plupart des morceaux manquants existent mais
   sont dispersés)
 ==> en cours ...

 * distribuer camltk avec advi (la seule GUI actuellement embeddable.)
 ==> fait dans la même mesure que camlimages (RPM livré avec advi).

 * refaire la page WEB.

 * packagifier pour Linux?
 ==> c'est fait pour RedHat.

 * fixer partout dans la distribution le nom d'Active-DVI en utilisant
la macro du manuel \def\ActiveDVI{Active-DVI}

KNOWN BUGS:
===========
 * Spurious fatal error: (the psfile had a bounding box, but the dvi
   file contained vscale=100.0 hoffset=-228.0 voffset=-368.0
   hscale=100.0, instead of llx, lly, urx, ury).
 Fatal error: exception Failure("psfile: no bbox")

DELAYED AFTER RELEASE:
======================

LIMITATIONS:

* Grdev.cut does not work ?

* PStricks ne marche pas correctement avec \ncarc etc. (annotation sur les
  flèches). 

* font searches uses the hard-wired directory "/usr/share/texmf/ls-R" (in 
config.ml.in instead of dynamically finding the search path for fonts). 
This will not work if the user install news fonts and sets some environment
variable accordingly. 

CLEANING: 

* Parsing of specials should probably be shared (it is duplicated). 
  The abstract syntax tree should provided a data-type for specials

* The hyperref links (green boxes) are a little to close to the text (take a
  link that ends with a '2' for instance) 

WISH LIST: 

 - Some option to stop effects would also be nice

    . wait are ignored

    . embeded applets are not launched
      (then, they could be launch by a key stroke, this is actually an
       interesting mode for applets)

    . reload would not kill/restart applets that are the same string command
      after reloading (this is also an interesting feature)
    ==> could you explain ?

 - Adapter la résolution aux vrai dpy de l'écran

 - transbox: replace steps by a timer
   ==> to wish list

 - alpha, blend, etc. for images: keep track within text and emit the info
   at every image?
   ==> to wish list

 ==> tester fullscreen mode

 - fork? (i.e. lancer un dvi identique à celui qui tourne)

 - améliorer advi.sty
 
  * pour les bulles-actives 
      -> générer un slide supplémentaire
      -> générer des footnotes (avec un cadre ou dans une mini-bulle)

  * exporter \ifadvi et \Ifadvi
  ==> done ?

 - ajouter m et i comme j et k mais une ligne à la fois (scrolling).

 - We need a .advirc file to setup options at launch time, and store
user's preferences for key bindings.

 - Traiter les fichiers postscript sans llx lly urx ury mais avec
vscale=100.0 hoffset=-228.0 voffset=-368.0 hscale=100.0

 - while 'g' jumps to aboslute (dvi) <page number>, 
  Make 'G' jumps to the page.<page number> url, i.e. latex page number, 
  whenever possible, and if not jump to <page number> as 'g'. 
  (Do not make 'G' the default, since it is fragiles ---depends on how latex
  has generated page numbers. Experiment with book files slides, etc.)

 - Need to control advi from within tex
   \advikey{key} would generate a call to key as if key has been pressed
   \advicom{f arg} would generate a call to internal function f with
   argument arg.

 - Need to be able to generate graphics from the Graphics module, that
   are displayed directly inside the advi screen.

 - Need also to be able to pop a small window to request something to
 the user (for instance to launch applications on a on demand basis).

 - Should incorporate the clock into the core advi in order to be able
 to interact smoothly with it (for instance to have a key to hide it)...

 DR: Not necessarily: the key bindings could be programmed from tex (neeed
 to be added). Then the user could also launch an application by hitting a
 key of his choice [ add an action on-key similar to on-clikc or on-mouse
 for active parts ]

 - Need a key to hide and show windows

==> Which ones?

 - Need a key binding similar to 'g' such that it goes to the page and pushes
   on the stack alll the pages from here to the target page

 - Need a ``compiling'' version of advi (name it advic) that creates
   and caches all the images of a presentation to speed up the
   presentation afterwards. (Otherwise one is obliged to play the
   presentation in advance by viewing every slides!)

 DR: I don't think so, since there is already several unfreeze flags to do
 that.  You should just use them, maybe add -unfreeze on the command line,
 that would do as if you press the unfree keep.

 - Add a new macro !current-page! for insertion in arguments of command
   calls.

 - Animated backgrounds ?

 - Engine for animated stuff from the W3C (SVG standard) ?

 - Engine for PDF rendering ?
