dnl Process this file with autoconf to produce a configure script.
AC_INIT(main.ml)

dnl try to find your compiler package
AC_MSG_CHECKING(your compiler package)

CAML=ocaml

CAMLDIR=`"$CAML"c -v | grep "^Standard" | sed "s/.*: *//"`
CAMLVERSION=`"$CAML"c -v | grep "compiler" | sed 's/.* version //' | sed 's/ .*$//'`

AC_MSG_RESULT(version $CAMLVERSION at $CAMLDIR)

dnl Checking cdk_config
AC_PATH_PROG(PATH_CDK, cdk_config, "nope")
if test "X$PATH_CDK" != "Xnope"; then
  HAVE_CDK="true"
else
  HAVE_CDK="false"
fi
  
dnl TeX 

AC_PATH_PROG(PATH_KPSEXPAND, kpsexpand, "nope") 
if test "$PATH_KPSEXPAND" = "nope"; then
  echo "**************** Warning ******************"
  echo "kpsexpand command not found." 
  echo "We use /usr/share/texmf as the root directory"
  echo "of TeX system"
  echo "*******************************************"
  TEXMFMAIN="/usr/share/texmf"
else
  AC_MSG_CHECKING(checking TeX root path)
  TEXMFMAIN=`kpsexpand '$TEXMFMAIN'`
  AC_MSG_RESULT($TEXMFMAIN)
fi

AC_PATH_PROG(PATH_KPSEWHICH, kpsewhich, "nope") 
if test "$PATH_KPSEWHICH" = "nope"; then
  PATH_KPSEWHICH="kpsewhich"
fi
AC_MSG_RESULT($PATH_KPSEWHICH)

dnl Gzip

AC_PATH_PROG(PATH_GZIP, gzip, "nope") 
AC_MSG_RESULT($PATH_GZIP)
if test "$PATH_GZIP" = "nope"; then
  PATH_GZIP=""
fi

dnl Checks for libraries.

dnl CamlImages

CAMLIMAGESDIR=$CAMLDIR/camlimages

AC_MSG_CHECKING(checking camlimages)
AC_ARG_WITH(camlimages, [  --with-camlimages=dir      specify camlimages library directory],
  if test "$withval" != "no" ; then  
	CAMLIMAGESDIR=$withval
  else
	AC_MSG_RESULT(no)
	CAMLIMAGESDIR=nope
  fi)

if test -f $CAMLIMAGESDIR/ci_ps.cma || $HAVE_CDK; then
	AC_MSG_RESULT(found)
	HAVE_CAMLIMAGES="true"
        if $HAVE_CDK; then
	        CAMLIMAGESLIBS="camlimages"
        else
		CAMLIMAGESCONFIGINCLUDE="include $CAMLIMAGESDIR/Makefile.config"
                CAMLIMAGESLIBS='$(WITH_CAMLIMAGES:.cma=)'
        fi
else
	AC_MSG_RESULT(found, but too old)
	echo "**************** Warning ******************"
	echo "camlimages is not found or incomplete in the directory \"$CAMLIMAGESDIR\""
	echo "(make sure install the latest version 2.00)"
	echo "*******************************************"
	HAVE_CAMLIMAGES="false"
	CAMLIMAGESLIBS=""
fi

dnl CamlTk

CAMLTKDIR=$CAMLDIR/camltk

AC_MSG_CHECKING(checking camltk)
AC_ARG_WITH(camltk, [  --with-camltk=dir      specify camltk library directory],
  if test "$withval" != "no" ; then  
	CAMLTKDIR=$withval
  else
	AC_MSG_RESULT(no)
	CAMLTKDIR=nope
  fi)

if test -f $CAMLTKDIR/camltk.cma || $HAVE_CDK; then
	AC_MSG_RESULT(found)
	HAVE_CAMLTK="true"
else
	AC_MSG_RESULT(no)
	HAVE_CAMLTK="false"
fi

dnl Checking gs:

PATH_GS="nope"
AC_MSG_CHECKING(checking gs)
AC_ARG_WITH(gs, [  --with-gs=path          specify gs path],
  if test "$withval" != "no" ; then  
	PATH_GS=$withval
  else
	PATH_GS="nope"
  fi)

if test "X$PATH_GS" = "Xnope"; then
  AC_PATH_PROG(PATH_GS, gs, "nope") 
fi

dnl check gs really exists and its version
if test -f "$PATH_GS" ; then
  HAVE_GS="true"
  GS_VERSION=`$PATH_GS -v | grep Ghostscript | sed -e 's/.*Ghostscript \([[0-9\.]]*\).*/\1/'`
  GS_VERSION_INT=`echo $GS_VERSION | sed -e 's/\.//'`
  if test `expr $GS_VERSION_INT \>= 6.52` != "1"; then
    AC_MSG_RESULT(found, but too old)
    GS_UPTO_DATE="*** TOO OLD ***"
    echo "**************** Warning ********************"
    echo "Your Ghostscript $GS_VERSION may be too old  "
    echo "You may need Ghostscript version 6.52 or higher"
    echo "for the correct synchronization of postscript"
    echo "and TeX graphics                             "
    echo "*********************************************"
  else
    GS_UPTO_DATE=""	
    AC_MSG_RESULT(found)
  fi
else
  AC_MSG_RESULT(no)
  HAVE_GS="false"
fi

dnl Check for libraries: END

AC_PATH_XTRA
WITH_X="$X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"

dnl Resources location
ADVI_LOC=`pwd`

dnl Substitute variables

AC_SUBST(CAML)
AC_SUBST(CAMLDIR)
AC_SUBST(CAMLVERSION)

AC_SUBST(HAVE_CDK)

AC_SUBST(CAMLIMAGESDIR)
AC_SUBST(CAMLIMAGESCONFIGINCLUDE)
AC_SUBST(HAVE_CAMLIMAGES)
AC_SUBST(CAMLIMAGESLIBS)
AC_SUBST(HAVE_GS)
AC_SUBST(PATH_GS)
AC_SUBST(TEXMFMAIN)
AC_SUBST(PATH_KPSEWHICH)
AC_SUBST(PATH_GZIP)

dnl BUILD OUR OWN LIBDIR
myprefix=$prefix
myexec_prefix=$exec_prefix
mylibdir=$libdir
test "x$myprefix" = xNONE && myprefix=$ac_default_prefix
test "x$myexec_prefix" = xNONE && myexec_prefix=${myprefix}
mylibdir=$libdir
test "x$libdir" = 'x${exec_prefix}/lib' && mylibdir="$myexec_prefix/lib"
ADVI_LOC=$mylibdir/advi

AC_SUBST(ADVI_LOC)
AC_SUBST(WITH_X)
AC_SUBST(HAVE_GS)
AC_OUTPUT(Makefile.config config.ml ifdef.ml)

echo "------------------------------------------------- Configuration finished"
echo "Language:    $CAML version $CAMLVERSION"
echo "cdk_config:  $HAVE_CDK"
echo "Camlimages:  $HAVE_CAMLIMAGES"
echo "CamlTk:      $HAVE_CAMLTK"
echo "GS:          $GS_UPTO_DATE version $GS_VERSION at $PATH_GS"
echo "Resources:   $ADVI_LOC/"
echo "------------------------------------------------------------------------"
